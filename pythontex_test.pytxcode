=>PYTHONTEX#py#default#default#0#code#####13#
print(f"Camila Batista Rahal and Elena Maestre Soteras")
=>PYTHONTEX#py#default#default#1#code#####143#
print(r"\begin{table}[h!]")
print(r"\centering")
print(r"\small")
print(r"\caption{Demographics Summary}")
print(r"\label{tab:summary-demographic}")
print(r"\begin{tabular}{|l|r|r|}")
print(r"\hline")
print(r"\textbf{Target} & \textbf{Non-consumer} & \textbf{Consumer} \\ \hline")

# Age category
print(r"\multicolumn{3}{|l|}{\textbf{Age category}} \\ \hline")
age_data = [
    ("18-24 years", 113, 524),
    ("25-34 years", 218, 262),
    ("35-44 years", 215, 140),
    ("45-54 years", 211, 83),
    ("55-64 years", 70, 23),
    ("65+ years", 13, 5)
    ]
for row in age_data:
    print(f"{row[0]} & {row[1]} & {row[2]} \\\\ \hline")

# Gender category
print(r"\multicolumn{3}{|l|}{\textbf{Gender category}} \\ \hline")
gender_data = [
    ("Female", 552, 385),
    ("Male", 288, 652)
    ]
for row in gender_data:
    print(f"{row[0]} & {row[1]} & {row[2]} \\\\ \hline")

# Education category
print(r"\multicolumn{3}{|l|}{\textbf{Education category}} \\ \hline")
education_data = [
    ("Doctorate degree", 53, 36),
    ("Left school at 16 years", 53, 45),
    ("Left school at 17 years", 11, 18),
    ("Left school at 18 years", 25, 74),
    ("Left school before 16 years", 14, 14),
    ("Masters degree", 189, 94),
    ("Professional certificate/diploma", 149, 121),
    ("Some college or university (no certificate)", 85, 418),
    ("University degree", 261, 217)
    ]
for row in education_data:
    print(f"{row[0]} & {row[1]} & {row[2]} \\\\ \hline")

# Country category
print(r"\multicolumn{3}{|l|}{\textbf{Country category}} \\ \hline")
country_data = [
    ("Australia", 8, 44),
    ("Canada", 32, 55),
    ("New Zealand", 1, 4),
    ("Other", 28, 90),
    ("Republic of Ireland", 6, 14),
    ("UK", 716, 328),
    ("USA", 49, 502)
    ]
for row in country_data:
    print(f"{row[0]} & {row[1]} & {row[2]} \\\\ \hline")

# Ethnicity category
print(r"\multicolumn{3}{|l|}{\textbf{Ethnicity category}} \\ \hline")
ethnicity_data = [
    ("Asian", 17, 8),
    ("Black", 25, 8),
    ("Mixed-Black/Asian", 0, 3),
    ("Mixed-White/Asian", 8, 12),
    ("Mixed-White/Black", 7, 12),
    ("Other", 19, 43),
    ("White", 764, 951)
    ]

for row in ethnicity_data:
    print(f"{row[0]} & {row[1]} & {row[2]} \\\\ \hline")

# Total
#print(r"\textbf{Total} & \textbf{840} & \textbf{1037} \\ \hline")

print(r"\bottomrule")
print(r"\end{tabular}")
print(r"\end{table}")
=>PYTHONTEX#py#default#default#2#code#####229#
# Define summary data as a dictionary
summary_data = {
    "Age":         [1877, 0.037, 0.878, -0.951, -0.951, -0.078, 0.497, 2.591],
    "Gender":      [1877, -0.0007, 0.482, -0.482, -0.482, -0.482, 0.482, 0.482],
    "Education":   [1877, -0.00098, 0.949, -2.435, -0.611, -0.059, 0.454, 1.984],
    "Country":     [1877, 0.358, 0.699, -0.570, -0.570, 0.960, 0.960, 0.960],
    "Ethnicity":   [1877, -0.309, 0.166, -1.107, -0.316, -0.316, -0.316, 1.907],
    "Nscore":      [1877, -0.00055, 0.998, -3.464, -0.678, 0.042, 0.629, 3.273],
    "Escore":      [1877, -0.0019, 0.997, -3.273, -0.695, 0.003, 0.637, 3.273],
    "Oscore":      [1877, -0.0032, 0.995, -3.273, -0.717, -0.019, 0.723, 2.901],
    "Ascore":      [1877, -0.00065, 0.996, -3.464, -0.606, -0.017, 0.760, 3.464],
    "Cscore":      [1877, -0.00039, 0.997, -3.464, -0.652, -0.006, 0.584, 3.464],
    "Impulsive":   [1877, 0.0052, 0.954, -2.555, -0.711, -0.217, 0.529, 2.901],
    "Ss":          [1877, -0.0074, 0.962, -2.078, -0.525, 0.079, 0.765, 1.921],
    "Target":      [1877, 0.552, 0.497, 0, 0, 1, 1, 1]
    }

columns = ["count", "mean", "std", "min", "25\\%", "50\\%", "75\\%", "max"]

# Print LaTeX table using raw format
print(r"\begin{table}[h!]")
print(r"\centering")
print(r"\small")
print(r"\caption{Summary statistics of features and target variable}")
print(r"\label{tab:summary_statistics}")
print(r"\begin{tabular}{l" + "r" * len(columns) + "}")
print(r"\toprule")
print(" & ".join([""] + columns) + r" \\ \midrule")

for feature, values in summary_data.items():
    row = [feature] + [str(v) for v in values]
    print(" & ".join(row) + r" \\")
print(r"\bottomrule")
print(r"\end{tabular}")
print(r"\end{table}")
=>PYTHONTEX#py#default#default#3#code#####267#
print(r"\begin{table}[h!]")
print(r"\centering")
print(r"\small")
print(r"\caption{Model performance across datasets}")
print(r"\label{tab:model_performance}")
print(r"\begin{tabular}{lcccccc} \toprule")
print(r"Model & Accuracy & Precision & Recall & F1 Score & AUC & Dataset \\ \midrule")

models = [
    ("Logistic Regression", 0.771574, 0.706522, 0.783133, 0.742857, 0.859121, "Validation"),
    ("Random Forest", 0.791878, 0.718750, 0.831325, 0.770950, 0.898594, "Validation"),
    ("Optimized Random Forest", 0.791878, 0.733333, 0.795181, 0.763006, 0.889347, "Validation"),
    ("Baseline XGBoost", 0.802030, 0.729167, 0.843373, 0.782123, 0.858592, "Validation"),
    ("Optimized XGBoost", 0.802030, 0.744444, 0.807229, 0.774566, 0.876242, "Validation"),
    ("SVM", 0.766497, 0.690722, 0.807229, 0.744444, 0.869267, "Validation"),
    ("Decision Tree", 0.761421, 0.704545, 0.746988, 0.725146, 0.846121, "Validation"),
    ("Bagging Classifier", 0.761421, 0.691489, 0.783133, 0.734463, 0.887022, "Validation"),
    ("Logistic Regression", 0.682692, 0.679245, 0.692308, 0.685714, 0.793639, "Hold-Out"),
    ("Random Forest", 0.798077, 0.816327, 0.769231, 0.792079, 0.891272, "Hold-Out"),
    ("Optimized Random Forest", 0.807692, 0.820000, 0.788462, 0.803922, 0.876849, "Hold-Out"),
    ("Baseline XGBoost", 0.817308, 0.823529, 0.807692, 0.815534, 0.884985, "Hold-Out"),
    ("Optimized XGBoost", 0.807692, 0.820000, 0.788462, 0.803922, 0.876898, "Hold-Out"),
    ("SVM", 0.759615, 0.764706, 0.750000, 0.757282, 0.837278, "Hold-Out"),
    ("Decision Tree", 0.769231, 0.791667, 0.730769, 0.760000, 0.846524, "Hold-Out"),
    ("Bagging Classifier", 0.788462, 0.777778, 0.807692, 0.792453, 0.866124, "Hold-Out"),
    ]

for row in models:
    print(f"{row[0]} & {row[1]:.6f} & {row[2]:.6f} & {row[3]:.6f} & {row[4]:.6f} & {row[5]:.6f} & {row[6]} \\\\")

print(r"\bottomrule")
print(r"\end{tabular}")
print(r"\end{table}")
=>PYTHONTEX:SETTINGS#
version=0.18
outputdir=pythontex-files-pythontex_test
workingdir=.
workingdirset=false
gobble=none
rerun=default
hashdependencies=default
makestderr=false
stderrfilename=full
keeptemps=none
pyfuture=default
pyconfuture=none
pygments=true
pygglobal=:GLOBAL||
fvextfile=-1
pyconbanner=none
pyconfilename=stdin
depythontex=false
pygfamily=py|python3|
pygfamily=pycon|pycon|
pygfamily=sympy|python3|
pygfamily=sympycon|pycon|
pygfamily=pylab|python3|
pygfamily=pylabcon|pycon|

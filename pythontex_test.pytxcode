=>PYTHONTEX#py#default#default#0#code#####12#
print(f"Camila Batista Rahal and Elena Maestre Soteras")
=>PYTHONTEX#py#default#default#1#code#####20#
import pandas as pd
import numpy as np
from ucimlrepo import fetch_ucirepo
import matplotlib.pyplot as plt
import seaborn as sns
from imblearn.over_sampling import SMOTE
from scipy.stats import zscore

# Fetch dataset
drug_consumption_quantified = fetch_ucirepo(id=373)

# Data (as pandas dataframes)
X = drug_consumption_quantified.data.features
y = drug_consumption_quantified.data.targets

# Change the name of column impulsive
X = X.copy()
X.rename(columns={'impuslive': 'impulsive'}, inplace=True)


# Reorder the classification of drug use from CL0 to CL6
ordered_categories = ['CL0', 'CL1', 'CL2', 'CL3', 'CL4', 'CL5', 'CL6']
for column in y.columns:
    y.loc[:, column] = pd.Categorical(y[column], categories=ordered_categories, ordered=True)

=>PYTHONTEX#py#default#default#2#code#####59#
print(r"\small")
print(r"\begin{center}")
print(r"\begin{tabular}{|l|r|r|} \hline")
print(r"\multicolumn{3}{|c|}{\textbf{Table 1: Demographic Summary}} \\ \hline")
print(r"\textbf{Target} & \textbf{Non-consumer} & \textbf{Consumer} \\ \hline")

# Age category
print(r"\multicolumn{3}{|l|}{\textbf{Age category}} \\ \hline")
age_data = [
    ("18-24 years", 113, 524),
    ("25-34 years", 218, 262),
    ("35-44 years", 215, 140),
    ("45-54 years", 211, 83),
    ("55-64 years", 70, 23),
    ("65+ years", 13, 5)
]
for row in age_data:
    print(f"{row[0]} & {row[1]} & {row[2]} \\\\ \hline")

# Gender category
print(r"\multicolumn{3}{|l|}{\textbf{Gender category}} \\ \hline")
gender_data = [
    ("Female", 552, 385),
    ("Male", 288, 652)
]
for row in gender_data:
    print(f"{row[0]} & {row[1]} & {row[2]} \\\\ \hline")

# Education category
print(r"\multicolumn{3}{|l|}{\textbf{Education category}} \\ \hline")
education_data = [
    ("Doctorate degree", 53, 36),
    ("Left school at 16 years", 53, 45),
    ("Left school at 17 years", 11, 18),
    ("Left school at 18 years", 25, 74),
    ("Left school before 16 years", 14, 14),
    ("Masterâ€™s degree", 189, 94),
    ("Professional certificate/diploma", 149, 121),
    ("Some college or university (no certificate)", 85, 418),
    ("University degree", 261, 217)
]
for row in education_data:
    print(f"{row[0]} & {row[1]} & {row[2]} \\\\ \hline")

# Country category
print(r"\multicolumn{3}{|l|}{\textbf{Country category}} \\ \hline")
country_data = [
    ("Australia", 8, 44),
    ("Canada", 32, 55),
    ("New Zealand", 1, 4),
    ("Other", 28, 90),
    ("Republic of Ireland", 6, 14),
    ("UK", 716, 328),
    ("USA", 49, 502)
]
for row in country_data:
    print(f"{row[0]} & {row[1]} & {row[2]} \\\\ \hline")

# Ethnicity category
print(r"\multicolumn{3}{|l|}{\textbf{Ethnicity category}} \\ \hline")
ethnicity_data = [
    ("Asian", 17, 8),
    ("Black", 25, 8),
    ("Mixed-Black/Asian", 0, 3),
    ("Mixed-White/Asian", 8, 12),
    ("Mixed-White/Black", 7, 12),
    ("Other", 19, 43),
    ("White", 764, 951)
]
for row in ethnicity_data:
    print(f"{row[0]} & {row[1]} & {row[2]} \\\\ \hline")

# Total
#print(r"\textbf{Total} & \textbf{840} & \textbf{1037} \\ \hline")

print(r"\end{tabular}")
print(r"\end{center}")
=>PYTHONTEX#py#default#default#3#code#####140#
# Define summary data as a dictionary
summary_data = {
    "Age":         [1877, 0.037, 0.878, -0.951, -0.951, -0.078, 0.497, 2.591],
    "Gender":      [1877, -0.0007, 0.482, -0.482, -0.482, -0.482, 0.482, 0.482],
    "Education":   [1877, "-", 0.949, -2.435, -0.611, -0.059, 0.454, 1.984],
    "Country":     [1877, 0.358, 0.699, -0.570, -0.570, 0.960, 0.960, 0.960],
    "Ethnicity":   [1877, -0.309, 0.166, -1.107, -0.316, -0.316, -0.316, 1.907],
    "Nscore":      [1877, "0.00055", 0.998, -3.464, -0.678, 0.042, 0.629, 3.273],
    "Escore":      [1877, -0.0019, 0.997, -3.273, -0.695, 0.003, 0.637, 3.273],
    "Oscore":      [1877, -0.0032, 0.995, -3.273, -0.717, -0.019, 0.723, 2.901],
    "Ascore":      [1877, "0.00065", 0.996, -3.464, -0.606, -0.017, 0.760, 3.464],
    "Cscore":      [1877, "0.0